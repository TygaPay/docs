{
  "openapi": "3.0.0",
  "info": {
    "title": "Tyga Pay Integration",
    "version": "1.0.0",
    "description": "Simply Integration into the Tyga Pay Platform"
  },
  "paths": {
    "/orders": {
      "post": {
        "summary": "Creates a new order",
        "tags": [
          "Orders"
        ],
        "servers": [
          {
            "url": "https://orders-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating the result of the operation"
                    },
                    "data": {
                      "$ref": "#/components/schemas/OrderCreateResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body"
          },
          "401": {
            "description": "Unauthorized access"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "get": {
        "summary": "Retrieves an order by ID",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "required": true,
            "description": "ID of the order to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "A message indicating the result of the operation"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Order"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/tenant": {
      "post": {
        "summary": "Creates a new tenant",
        "tags": [
          "Tenants"
        ],
        "servers": [
          {
            "url": "https://tenants-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tenant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantCreate"
                }
              }
            }
          },
          "409": {
            "description": "Permission denied"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/tenant/wallets": {
      "get": {
        "summary": "Fetches the wallets for a tenant",
        "tags": [
          "Tenants"
        ],
        "servers": [
          {
            "url": "https://tenants-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of wallet (e.g. \"deposit_wallet\")"
                      },
                      "balance": {
                        "type": "number",
                        "description": "The current balance of the wallet"
                      },
                      "totalDeposited": {
                        "type": "number",
                        "description": "The total amount deposited into the wallet"
                      },
                      "totalDistributed": {
                        "type": "number",
                        "description": "The total amount distributed from the wallet"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Permission denied"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/tenant/deposit-addresses": {
      "get": {
        "summary": "Fetches the deposit addresses for a tenant",
        "tags": [
          "Tenants"
        ],
        "servers": [
          {
            "url": "https://tenants-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "The deposit address for the tenant"
                      },
                      "network": {
                        "type": "string",
                        "description": "The network for the deposit address"
                      },
                      "supportedTokens": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The supported tokens for the deposit address"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Permission denied"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/transactions/users": {
      "get": {
        "summary": "Fetches a list of transactions for a user",
        "tags": [
          "Transactions"
        ],
        "servers": [
          {
            "url": "https://transactions-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "description": "The ID of the transaction to retrieve",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "description": "The ID of the user whose transactions to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The unique ID of the transaction"
                      },
                      "userId": {
                        "type": "string",
                        "description": "The ID of the user who initiated the transaction"
                      },
                      "tenantId": {
                        "type": "string",
                        "description": "The ID of the tenant associated with the transaction"
                      },
                      "status": {
                        "type": "string",
                        "description": "The current status of the transaction"
                      },
                      "amount": {
                        "type": "number",
                        "description": "The amount of the transaction"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Permission denied"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/transactions/withdraw": {
      "post": {
        "summary": "Creates a withdrawal request for a user",
        "tags": [
          "Transactions"
        ],
        "servers": [
          {
            "url": "https://transactions-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "requestBody": {
          "description": "Object containing parameters required for withdrawal request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  },
                  "network": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "withdrawAddress": {
                    "type": "string"
                  },
                  "otp": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Withdrawal request created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The unique ID of the withdrawal request"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/transactions/withdraw/estimate": {
      "post": {
        "summary": "Returns an estimate for a withdrawal request",
        "tags": [
          "Transactions"
        ],
        "servers": [
          {
            "url": "https://transactions-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "requestBody": {
          "description": "Object containing parameters required for withdrawal estimate",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Withdrawal estimate",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "withdrawalAmount": {
                      "type": "number"
                    },
                    "transactionFee": {
                      "type": "number"
                    },
                    "subscriptionFee": {
                      "type": "number"
                    },
                    "total": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/transactions/verification": {
      "post": {
        "summary": "Generates a verification code for a user and send to the user's email",
        "tags": [
          "Transactions"
        ],
        "servers": [
          {
            "url": "https://transactions-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "requestBody": {
          "description": "Object containing parameters required for verification code generation",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "withdrawal",
                      "userPay",
                      "providerPay"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification code generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "success",
                        "error"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Fetch the user by id",
        "tags": [
          "Users"
        ],
        "servers": [
          {
            "url": "https://users-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user id"
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your unique API Key"
          },
          {
            "in": "header",
            "name": "x-api-hash",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your API Hash"
          }
        ],
        "responses": {
          "200": {
            "description": "The user response by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new user",
        "tags": [
          "Users"
        ],
        "servers": [
          {
            "url": "https://users-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your unique API Key"
          },
          {
            "in": "header",
            "name": "x-api-hash",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your API Hash"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreate"
                }
              }
            }
          },
          "409": {
            "description": "User with the same third party ID already exists"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/user/balances": {
      "get": {
        "summary": "Fetch the balances of the user by id",
        "tags": [
          "Users"
        ],
        "servers": [
          {
            "url": "https://users-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user id"
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your unique API Key"
          },
          {
            "in": "header",
            "name": "x-api-hash",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your API Hash"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a mysterious string.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserBalances"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Credit user balance. All credits will be locked/pending until the funds are confirmed.",
        "tags": [
          "Users"
        ],
        "servers": [
          {
            "url": "https://users-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your unique API Key"
          },
          {
            "in": "header",
            "name": "x-api-hash",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your API Hash"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceCreditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User balance successfully credited",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "description": "Unique ID for the transaction"
                    },
                    "thirdPartyId": {
                      "type": "string",
                      "description": "Unique ID of the third party involved in the transaction"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "User with the same third party ID already exists"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    },
    "/user/deposit-addresses": {
      "get": {
        "summary": "Fetches the deposit addresses for a user",
        "tags": [
          "Users"
        ],
        "servers": [
          {
            "url": "https://users-v1-api-rdqehkur6a-ey.a.run.app"
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The user id"
          },
          {
            "in": "header",
            "name": "x-api-key",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your unique API Key"
          },
          {
            "in": "header",
            "name": "x-api-hash",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Your API Hash"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "The deposit address for the tenant"
                      },
                      "network": {
                        "type": "string",
                        "description": "The network for the deposit address"
                      },
                      "supportedTokens": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The supported tokens for the deposit address"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Permission denied"
          },
          "500": {
            "description": "Internal error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "OrderCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the order"
          },
          "description": {
            "type": "string",
            "description": "Description of the order"
          },
          "orderNumber": {
            "type": "string",
            "description": "Unique order number"
          },
          "amount": {
            "type": "number",
            "description": "Total amount of the order"
          },
          "email": {
            "type": "string",
            "description": "Email of the customer making the order"
          },
          "notifyUrl": {
            "type": "string",
            "description": "URL to notify after order is completed"
          },
          "returnUrl": {
            "type": "string",
            "description": "URL to redirect to after order is completed"
          }
        },
        "required": [
          "orderNumber",
          "amount"
        ]
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the order."
          },
          "orderNumber": {
            "type": "string",
            "description": "The unique order number."
          },
          "name": {
            "type": "string",
            "description": "An optional name of the order."
          },
          "description": {
            "type": "string",
            "description": "An optional description of the order."
          },
          "amount": {
            "type": "number",
            "description": "The total amount of the order."
          },
          "amountPaid": {
            "type": "number",
            "description": "The amount paid towards the order."
          },
          "amountDue": {
            "type": "number",
            "description": "The amount due for the order."
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus",
            "description": "The status of the order."
          },
          "state": {
            "$ref": "#/components/schemas/OrderState",
            "description": "The state of the order."
          },
          "email": {
            "type": "string",
            "description": "The email address of the customer who placed the order."
          },
          "notifyUrl": {
            "type": "string",
            "description": "The URL to notify upon order completion."
          },
          "returnUrl": {
            "type": "string",
            "description": "The URL to redirect to upon order completion."
          },
          "createdDate": {
            "type": "string",
            "description": "The date the order was created."
          },
          "modifiedDate": {
            "type": "string",
            "description": "The date the order was last modified."
          }
        }
      },
      "OrderStatus": {
        "type": "string",
        "enum": [
          "new"
        ],
        "description": "The status of the order (WIP more statusses coming)."
      },
      "OrderState": {
        "type": "string",
        "enum": [
          "pending"
        ],
        "description": "The state of the order (WIP more states coming)."
      },
      "OrderCreateResponse": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The TygaPay order id of the order."
          },
          "paymentUrl": {
            "type": "string",
            "description": "The payment url to redirect to."
          }
        }
      },
      "Tenant": {
        "type": "object",
        "required": [
          "code",
          "name"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "The code of the tenant"
          },
          "name": {
            "type": "string",
            "description": "The name of the tenant"
          }
        }
      },
      "TenantCreate": {
        "type": "object",
        "properties": {
          "apiSecret": {
            "type": "string",
            "description": "A secret for the new tenant"
          },
          "apiKey": {
            "type": "string",
            "description": "A unique API Key for the new tenant"
          },
          "message": {
            "type": "string",
            "description": "A friendly message after a new tenant is created"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "thirdPartyUserId",
          "firstName",
          "lastName",
          "languageCode",
          "email",
          "country",
          "dateOfBirth"
        ],
        "properties": {
          "thirdPartyUserId": {
            "type": "string",
            "description": "Third party ID of the user"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the user"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the user"
          },
          "languageCode": {
            "type": "string",
            "description": "Language code of the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email of the user"
          },
          "country": {
            "type": "string",
            "description": "Country of the user"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "description": "Date of birth of the user"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the user"
          },
          "kycExperienceId": {
            "type": "string",
            "description": "KYC Experience Id of the user"
          }
        }
      },
      "BalanceCreditRequest": {
        "type": "object",
        "required": [
          "userId",
          "amount",
          "thirdPartyId"
        ],
        "properties": {
          "thirdPartyId": {
            "type": "string",
            "description": "Third party unique transaction id - used to prevent duplicate transactions"
          },
          "userId": {
            "type": "string",
            "description": "Tyga user id"
          },
          "amount": {
            "type": "number",
            "description": "Amount to credit"
          }
        }
      },
      "UserBalances": {
        "type": "object",
        "properties": {
          "totalBalance": {
            "type": "number",
            "description": "The users total balance"
          },
          "mainBalance": {
            "type": "number",
            "description": "The users main balance"
          },
          "pendingBalance": {
            "type": "number",
            "description": "The users pending balance"
          }
        }
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The newly created users Id"
          },
          "thirdPartyUserId": {
            "type": "string",
            "description": "Third party ID of the user"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Orders",
      "description": "API for managing orders"
    },
    {
      "name": "Tenants",
      "description": "The tenants managing API"
    },
    {
      "name": "Transactions",
      "description": "API for managing transactions"
    },
    {
      "name": "Users",
      "description": "The users managing API"
    }
  ]
}